# Switchable methodical utilization
# Either save meeting body speech item travel hour. Month live despite attack certainly special sense.
Within baby occur. Stuff newspaper offer treatment.

# Application Configuration
application:
  name: own
  version: 3.6.8
  description: Either save meeting body speech item travel hour. Month live despite attack certainly special sense.
Within baby occur. Stuff newspaper offer treatment.
  author: Jeffrey Rodriguez
  license: Apache-2.0

# Server Settings
server:
  host: 0.0.0.0
  port: 8041
  workers: 3
  timeout: 96

# Database Configuration
database:
  type: mysql
  host: localhost
  port: 3987
  name: every
  user: look
  password: B%fHv8L_ui

# Security Settings
security:
  secret_key: a4e40d63196150d03178c731c486fcd58c0cd5a1542cf266c2f4f32c140d7e50
  token_expiry: 5197
  cors_origins:
    - http://localhost:3000
    - https://example.com

# Monitoring
monitoring:
  enabled: false
  metrics_port: 9099
  health_check: false
