/* Customer-focused needs-based standardization */
/* Evidence statement meeting wife. Social meet certain. Cause garden paper medical guy young sign.
Imagine best success prevent ready factor. */

.Globals/v1/classSubject.css {
    display: flex;
    flex-direction: column;
    padding: 1rem;
    background-color: #ffffff;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.Globals/v1/classSubject.css__header {
    font-size: 1.5rem;
    font-weight: bold;
    color: #333333;
    margin-bottom: 1rem;
}

.Globals/v1/classSubject.css__content {
    color: #666666;
    line-height: 1.6;
}

.Globals/v1/classSubject.css__button {
    background-color: #007bff;
    color: white;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s;
}

.Globals/v1/classSubject.css__button:hover {
    background-color: #0056b3;
}

.Globals/v1/classSubject.css__button:active {
    transform: translateY(1px);
}
