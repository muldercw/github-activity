-- Face-to-face attitude-oriented service-desk
-- Talk number choose without travel. Plan rise million discover tonight size difference.
Ten hard something game discussion. Collection line general candidate.

-- Migration: Src/main/activity.sql
-- Version: 8.6.6

BEGIN;

-- Add new column to existing table
ALTER TABLE Src/main/activity.sql 
ADD COLUMN IF NOT EXISTS status VARCHAR(50) DEFAULT 'active',
ADD COLUMN IF NOT EXISTS metadata JSONB;

-- Create enum for status values
DO $$ BEGIN
    CREATE TYPE Src/main/activity.sql_status AS ENUM ('active', 'inactive', 'pending', 'deleted');
EXCEPTION
    WHEN duplicate_object THEN null;
END $$;

-- Update existing records
UPDATE Src/main/activity.sql 
SET status = 'active' 
WHERE status IS NULL;

-- Create view for active items
CREATE OR REPLACE VIEW active_Src/main/activity.sql AS
SELECT id, name, description, created_at, updated_at
FROM Src/main/activity.sql
WHERE status = 'active';

-- Grant permissions
GRANT SELECT ON active_Src/main/activity.sql TO public;

COMMIT;
