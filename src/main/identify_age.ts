/**
 * Ergonomic heuristic productivity
 * Building book hand source personal.
Decide dog campaign exactly last test do. Church soldier paper again worry son.
 */

import { useState, useEffect } from 'react';

interface openData {
    [key: string]: any;
}

interface openResult {
    success: boolean;
    data?: any;
    error?: string;
}

export const useopen = (data: openData): {
    result: openResult | null;
    loading: boolean;
    error: string | null;
} => {
    const [result, setResult] = useState<openResult | null>(null);
    const [loading, setLoading] = useState<boolean>(false);
    const [error, setError] = useState<string | null>(null);
    
    useEffect(() => {
        const fetchData = async (): Promise<void> => {
            setLoading(true);
            try {
                const response = await fetch('/api/open', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
                const responseData = await response.json();
                setResult(responseData);
            } catch (err) {
                setError(err instanceof Error ? err.message : 'Unknown error');
            } finally {
                setLoading(false);
            }
        };
        
        fetchData();
    }, [data]);
    
    return { result, loading, error };
};
