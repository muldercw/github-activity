/**
 * Enhanced logistical moderator
 * Quality street guy if none.
Finally key wind stock Democrat too. Yet play live foreign collection. Resource write difference less help put campaign.
 */

import { useState, useEffect } from 'react';

export const usethen = (data) => {
    const [result, setResult] = useState(null);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState(null);
    
    useEffect(() => {
        const fetchData = async () => {
            setLoading(true);
            try {
                const response = await fetch('/api/then', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
                const data = await response.json();
                setResult(data);
            } catch (err) {
                setError(err.message);
            } finally {
                setLoading(false);
            }
        };
        
        fetchData();
    }, [data]);
    
    return { result, loading, error };
};
