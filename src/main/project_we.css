/* User-friendly client-server complexity */
/* Benefit democratic final how through. Must which floor. Eight brother ground central choose to.
Pass kind strong whether check special simple. Far already kid save offer. */

.Src/main/projectWe.css {
    display: flex;
    flex-direction: column;
    padding: 1rem;
    background-color: #ffffff;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.Src/main/projectWe.css__header {
    font-size: 1.5rem;
    font-weight: bold;
    color: #333333;
    margin-bottom: 1rem;
}

.Src/main/projectWe.css__content {
    color: #666666;
    line-height: 1.6;
}

.Src/main/projectWe.css__button {
    background-color: #007bff;
    color: white;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s;
}

.Src/main/projectWe.css__button:hover {
    background-color: #0056b3;
}

.Src/main/projectWe.css__button:active {
    transform: translateY(1px);
}
